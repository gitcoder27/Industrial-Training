		JAVA BEANS
	
A Java bean is a java class that should follow following conventions:
- it should have a no-arg constructor.
- it should be Serializable.
- It should provide methods to set and get the values of the properties, known as getter and setter
 methods.
 
 *it follows the concept of encapsulation.
 
 
 
 		SERVER
 		
 - Server is the one who servers the request
 - For a server to serve a client request resource must be available.
 - Server does not create any request on its own.
 
 	Types of servers :
  	-Web servers eg. tomcat, glassfish, jetty (it will have j2EE container to run all j2EE
  	 applications)
  	 Limited to http request.
 	-Applications servers eg. Jboss, Weblogic, Oracle app server
 	 Need license to use application servers.
 	-DB servers eg. Mysql(sql), mongodb(no sql)
 	
 	
 		URL (Uniform Resource Locator)
 
 - URLs are used to access our remote application
 - if it is web based application we use http protocol
 - URLs are used to identify or locate the resources over the network.
 - URLs contains
 	Resource path
 	Data[optional]
 	
 	https://mail.google.com/mail/u/0/#inbox
 	
 	http - it is the protocol
 	google.com - domain name
 	 one domain can point to multiple sub domain
 	mail - sub domain
 	/mail - resource path
 	/u/0/#inbox - additional data to specify path
 	
 	HTTP
 - http is a protocol which is used to communicate with web application i.e., it defines the set of
 rules to communicate with web app which may be hosted in a local or remote server.
 
 Types of https servers -
1. GET
	- it is used to get the response from the server
	- get is not generally used to deal with data but still we can pass 256 characters of data i.e., 
	limited data can be passed by using get request.
	- get carries all the limited data in the url, hence it is not secured.
	- get request can be bookmarked
	- data is exposed in the url
	
2. POST
	- it is used to post data to the server.
	- any amount of data can be posted/send to the server.
	- all form or ui data travel in the body of the post request which is not exposed to the URL.
	- it is secure compared to get
	- post request cannot be book marked.
	
3. DELETE
4. PUT
5. TRACE
6. OPTIONS
7. HEAD
8. CONNECT

http response contains:
	status code + status message 
	mime type
	cookie(optional)
	actual contain data present in reponse body
	
	status code, status message and cookie are automatically generated by a server
	-status code :
		202 : response successful
		404 : resorce not found
		405 : mismatch of response type
		500 : internal server error
		
	mime type
		type of data of response eg. png, txt , any file type
		
		
		
		JSON 
Javascript Object Notation.
- it is a syntax for storing and exchanging data.
- json is text return with javascript object notation.
- json syntax is derived from Javascript object notation syntax
- data is in key value phase or name value phase
- data is separated by (,)
- {} holds objects
- [] holds arrays
- json supports integer, float, arrays, boolean, string, object.

eg.- 
{
	"UN" : "root",
	"PW" : "root",
	"isLoggedin" : true,
	"age" : 20,
	"names" : ["one","two","three"] 
}



	FEATURES OF SPRING FRAMEWORK
- lightweight with respect to size and transparency.

- Inversion Of Control(IOC) : in spring framework, loose coupling is achieved using IOC. The objects 
give their own dependiecies instead of creating or looking for dependent objects.

- Aspect Oriented Programming(AOP) : By separating application business logic from system services,
Spring framework supports AOP and enables cohesive development.

- Container : creates and manages the life cycle and config of application objects.

- MVC Framework

- transaction management is also done by spring.
object relational maping


		DEPENDENCY INJECTION
Dependency injection is a pattern through which to implement IOC, where the control being inverted
 is the setting of object's dependencies
